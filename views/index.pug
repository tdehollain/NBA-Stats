mixin game(game)
  - var score = game.gameScoreData
  - var scoreElements = game.gameScoreData.gameScoreElements
  div.gameDescription
    img.awayTeamLogo(src='/teamLogos/large/' + game.awayTeamShort + '.png')
    div#overallScore #{score.gameScore + score.indivScore}
    img.homeTeamLogo(src='/teamLogos/large/' + game.homeTeamShort + '.png')
  hr.hidden
  div.gamePerf.hidden
    P.scoreNumber #{score.gameScore}
    p.scoreText Game
    div.gamePerfDetails
      hr
      if scoreElements.nbOvertimes === 1
        p.nbOvertimes 1 Overtime
      else if scoreElements.nbOvertimes > 1
        p.nbOvertimes #{scoreElements.nbOvertimes} Overtimes
      p.scoringDiffWeightedAvg Score Difference: #{scoreElements.scoringDiffWeightedAvg}
      p.LeadChanges #{scoreElements.leadChanges} Lead Changes
      p.lateLeadChanges #{scoreElements.lateLeadChanges} Late Lead Changes
      if scoreElements.buzzerBeaterTier || scoreElements.buzzerBeaterWinner
        p.buzzerBeaterTier Buzzer Beater!
      if scoreElements.maxTeamPoints>130
        p.maxPoints Winning team points: #{scoreElements.maxTeamPoints}
  div.indivPerf.hidden
    p.scoreNumber #{score.indivScore}
    p.scoreText Individual
    div.indivPerfDetails
      hr
      each val in scoreElements.pointsPerf
        p.indivPoint= val.player + ": " + val.points + ' points'
      each val in scoreElements.threePtsPerf
        p.indivThreePts= val.player + ': ' + val.threePts + " made 3 pts"
      each val in scoreElements.reboundsPerf
        p.indiv= val.player + ': ' + val.rebounds + " rebounds"
      each val in scoreElements.assistsPerf
        p.indivPoint= val.player + ": " + val.assists + ' assists'
      each val in scoreElements.stealsPerf
        p.indivPoint= val.player + ": " + val.steals + ' steals'
      each val in scoreElements.blocksPerf
        p.indivPoint= val.player + ": " + val.blocks + ' blocks'
      each val in scoreElements.tripleDoublePerf
        p.indivPoint= val.player + ': triple double'
  div.plusWrapper
    div.plusButton
      span.plusButtonText +
  a.gameLink.hidden(href='/game/' + game.gameId) See game data
//-     output += '<li>Individual performance - points: ' + JSON.stringify(res.gameScoreElements.pointsPerf) + '</li>';
//-     output += '<li>Individual performance - 3 Points made: ' + JSON.stringify(res.gameScoreElements.threePtsPerf) + '</li>';
//-     output += '<li>Individual performance - Rebounds: ' + JSON.stringify(res.gameScoreElements.reboundsPerf) + '</li>';
//-     output += '<li>Individual performance - Assists: ' + JSON.stringify(res.gameScoreElements.assistsPerf) + '</li>';
//-     output += '<li>Individual performance - Steals: ' + JSON.stringify(res.gameScoreElements.stealsPerf) + '</li>';
//-     output += '<li>Individual performance - Blocks: ' + JSON.stringify(res.gameScoreElements.blocksPerf) + '</li>';
//-     output += '<li>Individual performance - Triple Doubles: ' + JSON.stringify(res.gameScoreElements.tripleDoublePerf) + '</li></ul>';






doctype html
html(lang="en")
  head
    title= 'NBA - What game should I watch?'
    meta(name="google-site-verification" content="g49XxGpYpDLNZ6sBbipT__OZ3zmOKrTDIWgXkJ6oD94")
    link(rel='stylesheet', href='/css/style.css')
    script(src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js")
    script(src='/scripts/script.js')
  body
    div.mainWrapper
      div#dateNav
        a.dateLink(href='/' + dates.yesterday) #{dates.yesterdayLong}
        p.dateLink #{dates.todayLong}
        a.dateLink(href='/' + dates.tomorrow) #{dates.tomorrowLong}
      if games.length > 0
        ul.gamesWrapper
          for game in games
            li.game
              +game(game)
      else
        p No games on date #{dates.today}